name: p7zip-CI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: p7zip-full build
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            mode: "clang"
          - os: ubuntu-latest
            mode: "gcc-x64"

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: rui314/setup-mold@staging
      with:
        make-default: true
    - name: install
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt install git clang llvm patchelf build-essential make cmake wget unzip
    - name: submodule update
      run: |
        git submodule update --init
        cd Codecs/fast-lzma2/
        patch -p1 -i ../../UInt64.patch
    - name: Setting Up (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        wget https://github.com/Terraspace/UASM/files/9881874/uasm256_linux64.zip
        unzip uasm256_linux64.zip uasm
        chmod +x uasm
        sudo cp uasm /usr/local/bin/
    - name: Build (Linux/Clang)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'clang' }}
      run: |
        export PLATFORM=x64
        export CMPL=cmpl_clang_x64
        export OUTDIR=c_x64
        export CC=clang
        export CXX=clang++
        export LD=ld.mold
        ./build_linux.sh
    - name: Build (Linux/gcc-x64)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'gcc-x64' }}
      run: |
        export PLATFORM=x64
        export CMPL=cmpl_gcc_x64
        export OUTDIR=g_x64
        export CC=gcc
        export CXX=g++
        export LD=ld.mold
        ./build_linux.sh
    - name: 7z check
      run: |
        export PROJECT_ROOT=`pwd`
        cd $PROJECT_ROOT/p7zip_test_utils/check
        bash ../../check_7z.sh $PROJECT_ROOT/bin/p7zip/7z
        bash check.sh $PROJECT_ROOT/bin/p7zip/7zz
    - name: archive (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'clang' }}
      run: |
        mkdir -p release
        cd bin
        ./p7zip/7zz a ../release/p7zip-linux-x86_64-gcc.7z ./p7zip
    - name: archive (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'clang' }}
      run: |
        mkdir -p release
        cd bin
        ./p7zip/7zz a ../release/p7zip-linux-x86_64-clang.7z ./p7zip
    - name: Release (Linux/Clang)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'gcc-x64' }}
      uses: ncipollo/release-action@v1
      with:
        omitBody: true
        artifacts: 'release/*'
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Release (Linux/Clang)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.mode == 'clang' }}
      uses: ncipollo/release-action@v1
      with:
        omitBody: true
        artifacts: 'release/*'
        token: ${{ secrets.GITHUB_TOKEN }}
